name: "Release"

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.X
      - name: Install dependencies
        run: dotnet restore
      - name: Build with dotnet
        run: dotnet build --configuration Release
      - name: Test with dotnet
        run: dotnet test --configuration Release ./src/Costasdev.Uuidv7.Tests/Costasdev.Uuidv7.Tests.csproj
      - name: Preserve artifact for release
        uses: actions/upload-artifact@v4.3.4
        with:
          name: release
          path: src/Costasdev.Uuidv7/bin/Release/netstandard2.0/Costasdev.Uuidv7.dll

  publish:
    name: Package and publish
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.X
      - name: Download artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: release
          path: src/Costasdev.Uuidv7/bin/Release/netstandard2.0
      - name: Generate nuget package
        run: dotnet pack src/Costasdev.Uuidv7/Costasdev.Uuidv7.csproj --configuration Release --output ./packages -p:PackageVersion=${{ github.ref_name }}
      - name: Publish package to nuget.org
        run: dotnet nuget push packages/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      - name: Create release on GitHub
        uses: softprops/action-gh-release@v2.0.6
        with:
          files: packages/*.nupkg
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Release notes for version ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
