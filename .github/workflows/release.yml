name: "Release"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build ./src/Costasdev.Uuidv7.Tests/Costasdev.Uuidv7.Tests.csproj

      - name: Package NuGet
        run: dotnet pack src/Costasdev.Uuidv7/Costasdev.Uuidv7.csproj --configuration Release --output ./packages -p:PackageVersion=${{ github.ref_name }} --no-build

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./packages/*.nupkg

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Download NuGet package
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ./packages

      - name: Publish package to NuGet
        run: dotnet nuget push ./packages/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: packages/*.nupkg
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Release notes for version ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
